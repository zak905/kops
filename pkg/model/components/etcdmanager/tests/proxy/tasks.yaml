Lifecycle: ""
Name: etcd-clients-ca
Signer: null
alternateNames: null
issuer: ""
oldFormat: false
subject: cn=etcd-clients-ca
type: ca
---
Lifecycle: ""
Name: etcd-manager-ca-events
Signer: null
alternateNames: null
issuer: ""
oldFormat: false
subject: cn=etcd-manager-ca-events
type: ca
---
Lifecycle: ""
Name: etcd-manager-ca-main
Signer: null
alternateNames: null
issuer: ""
oldFormat: false
subject: cn=etcd-manager-ca-main
type: ca
---
Lifecycle: ""
Name: etcd-peers-ca-events
Signer: null
alternateNames: null
issuer: ""
oldFormat: false
subject: cn=etcd-peers-ca-events
type: ca
---
Lifecycle: ""
Name: etcd-peers-ca-main
Signer: null
alternateNames: null
issuer: ""
oldFormat: false
subject: cn=etcd-peers-ca-main
type: ca
---
Base: memfs://clusters.example.com/minimal.example.com/backups/etcd-events
Contents: |-
  {
    "memberCount": 1
  }
Lifecycle: ""
Location: /control/etcd-cluster-spec
Name: etcd-cluster-spec-events
Public: null
---
Base: memfs://clusters.example.com/minimal.example.com/backups/etcd-main
Contents: |-
  {
    "memberCount": 1
  }
Lifecycle: ""
Location: /control/etcd-cluster-spec
Name: etcd-cluster-spec-main
Public: null
---
Base: null
Contents: |
  apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: null
    labels:
      k8s-app: etcd-manager-events
    name: etcd-manager-events
    namespace: kube-system
  spec:
    containers:
    - command:
      - /bin/sh
      - -c
      - mkfifo /tmp/pipe; (tee -a /var/log/etcd.log < /tmp/pipe & ) ; exec /etcd-manager
        --backup-store=memfs://clusters.example.com/minimal.example.com/backups/etcd-events
        --client-urls=https://__name__:4002 --cluster-name=etcd-events --containerized=true
        --dns-suffix=.internal.minimal.example.com --grpc-port=3997 --peer-urls=https://__name__:2381
        --quarantine-client-urls=https://__name__:3995 --v=6 --volume-name-tag=k8s.io/etcd/events
        --volume-provider=aws --volume-tag=k8s.io/etcd/events --volume-tag=k8s.io/role/master=1
        --volume-tag=kubernetes.io/cluster/minimal.example.com=owned > /tmp/pipe 2>&1
      env:
      - name: NO_PROXY
        value: noproxy.example.com
      - name: http_proxy
        value: http://proxy.example.com
      - name: https_proxy
        value: http://proxy.example.com
      - name: no_proxy
        value: noproxy.example.com
      image: registry.k8s.io/etcdadm/etcd-manager:v3.0.20220417@sha256:a0465bfcef15657f3260f4ba3b7ab359b10c32767cf2cd3ee7a263f3cfa3b64e
      name: etcd-manager
      resources:
        requests:
          cpu: 100m
          memory: 100Mi
      securityContext:
        privileged: true
      volumeMounts:
      - mountPath: /rootfs
        name: rootfs
      - mountPath: /run
        name: run
      - mountPath: /etc/kubernetes/pki/etcd-manager
        name: pki
      - mountPath: /var/log/etcd.log
        name: varlogetcd
    hostNetwork: true
    hostPID: true
    priorityClassName: system-cluster-critical
    tolerations:
    - key: CriticalAddonsOnly
      operator: Exists
    volumes:
    - hostPath:
        path: /
        type: Directory
      name: rootfs
    - hostPath:
        path: /run
        type: DirectoryOrCreate
      name: run
    - hostPath:
        path: /etc/kubernetes/pki/etcd-manager-events
        type: DirectoryOrCreate
      name: pki
    - hostPath:
        path: /var/log/etcd-events.log
        type: FileOrCreate
      name: varlogetcd
  status: {}
Lifecycle: ""
Location: manifests/etcd/events.yaml
Name: manifests-etcdmanager-events
Public: null
---
Base: null
Contents: |
  apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: null
    labels:
      k8s-app: etcd-manager-main
    name: etcd-manager-main
    namespace: kube-system
  spec:
    containers:
    - command:
      - /bin/sh
      - -c
      - mkfifo /tmp/pipe; (tee -a /var/log/etcd.log < /tmp/pipe & ) ; exec /etcd-manager
        --backup-store=memfs://clusters.example.com/minimal.example.com/backups/etcd-main
        --client-urls=https://__name__:4001 --cluster-name=etcd --containerized=true
        --dns-suffix=.internal.minimal.example.com --grpc-port=3996 --peer-urls=https://__name__:2380
        --quarantine-client-urls=https://__name__:3994 --v=6 --volume-name-tag=k8s.io/etcd/main
        --volume-provider=aws --volume-tag=k8s.io/etcd/main --volume-tag=k8s.io/role/master=1
        --volume-tag=kubernetes.io/cluster/minimal.example.com=owned > /tmp/pipe 2>&1
      env:
      - name: NO_PROXY
        value: noproxy.example.com
      - name: http_proxy
        value: http://proxy.example.com
      - name: https_proxy
        value: http://proxy.example.com
      - name: no_proxy
        value: noproxy.example.com
      image: registry.k8s.io/etcdadm/etcd-manager:v3.0.20220417@sha256:a0465bfcef15657f3260f4ba3b7ab359b10c32767cf2cd3ee7a263f3cfa3b64e
      name: etcd-manager
      resources:
        requests:
          cpu: 200m
          memory: 100Mi
      securityContext:
        privileged: true
      volumeMounts:
      - mountPath: /rootfs
        name: rootfs
      - mountPath: /run
        name: run
      - mountPath: /etc/kubernetes/pki/etcd-manager
        name: pki
      - mountPath: /var/log/etcd.log
        name: varlogetcd
    hostNetwork: true
    hostPID: true
    priorityClassName: system-cluster-critical
    tolerations:
    - key: CriticalAddonsOnly
      operator: Exists
    volumes:
    - hostPath:
        path: /
        type: Directory
      name: rootfs
    - hostPath:
        path: /run
        type: DirectoryOrCreate
      name: run
    - hostPath:
        path: /etc/kubernetes/pki/etcd-manager-main
        type: DirectoryOrCreate
      name: pki
    - hostPath:
        path: /var/log/etcd.log
        type: FileOrCreate
      name: varlogetcd
  status: {}
Lifecycle: ""
Location: manifests/etcd/main.yaml
Name: manifests-etcdmanager-main
Public: null

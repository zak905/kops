apiVersion: v1
kind: ServiceAccount
metadata:
  creationTimestamp: null
  labels:
    addon.kops.k8s.io/name: eks-pod-identity-webhook.addons.k8s.io
    app.kubernetes.io/managed-by: kops
    k8s-addon: eks-pod-identity-webhook.addons.k8s.io
  name: pod-identity-webhook
  namespace: kube-system

---

apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  creationTimestamp: null
  labels:
    addon.kops.k8s.io/name: eks-pod-identity-webhook.addons.k8s.io
    app.kubernetes.io/managed-by: kops
    k8s-addon: eks-pod-identity-webhook.addons.k8s.io
  name: pod-identity-webhook
  namespace: kube-system
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - list
  - get
  - watch

---

apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  creationTimestamp: null
  labels:
    addon.kops.k8s.io/name: eks-pod-identity-webhook.addons.k8s.io
    app.kubernetes.io/managed-by: kops
    k8s-addon: eks-pod-identity-webhook.addons.k8s.io
  name: pod-identity-webhook
  namespace: kube-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: pod-identity-webhook
subjects:
- kind: ServiceAccount
  name: pod-identity-webhook
  namespace: kube-system

---

apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  creationTimestamp: null
  labels:
    addon.kops.k8s.io/name: eks-pod-identity-webhook.addons.k8s.io
    app.kubernetes.io/managed-by: kops
    k8s-addon: eks-pod-identity-webhook.addons.k8s.io
  name: pod-identity-webhook
rules:
- apiGroups:
  - ""
  resources:
  - serviceaccounts
  verbs:
  - get
  - watch
  - list

---

apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  creationTimestamp: null
  labels:
    addon.kops.k8s.io/name: eks-pod-identity-webhook.addons.k8s.io
    app.kubernetes.io/managed-by: kops
    k8s-addon: eks-pod-identity-webhook.addons.k8s.io
  name: pod-identity-webhook
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: pod-identity-webhook
subjects:
- kind: ServiceAccount
  name: pod-identity-webhook
  namespace: kube-system

---

apiVersion: apps/v1
kind: Deployment
metadata:
  creationTimestamp: null
  labels:
    addon.kops.k8s.io/name: eks-pod-identity-webhook.addons.k8s.io
    app.kubernetes.io/managed-by: kops
    k8s-addon: eks-pod-identity-webhook.addons.k8s.io
  name: pod-identity-webhook
  namespace: kube-system
spec:
  replicas: 2
  selector:
    matchLabels:
      app: pod-identity-webhook
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: pod-identity-webhook
        kops.k8s.io/managed-by: kops
    spec:
      containers:
      - command:
        - /webhook
        - --in-cluster=false
        - --namespace=kube-system
        - --service-name=pod-identity-webhook
        - --annotation-prefix=eks.amazonaws.com
        - --token-audience=amazonaws.com
        - --logtostderr
        - --watch-config-map
        - --v=5
        image: amazon/amazon-eks-pod-identity-webhook:v0.4.0
        name: pod-identity-webhook
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /healthz
            port: 9999
            scheme: HTTP
          initialDelaySeconds: 5
          periodSeconds: 5
          successThreshold: 1
          timeoutSeconds: 1
        volumeMounts:
        - mountPath: /etc/webhook/certs
          name: cert
          readOnly: true
      priorityClassName: system-cluster-critical
      serviceAccountName: pod-identity-webhook
      topologySpreadConstraints:
      - labelSelector:
          matchLabels:
            app: pod-identity-webhook
        maxSkew: 1
        topologyKey: topology.kubernetes.io/zone
        whenUnsatisfiable: ScheduleAnyway
      - labelSelector:
          matchLabels:
            app: pod-identity-webhook
        maxSkew: 1
        topologyKey: kubernetes.io/hostname
        whenUnsatisfiable: DoNotSchedule
      volumes:
      - name: cert
        secret:
          secretName: pod-identity-webhook-cert

---

apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  creationTimestamp: null
  labels:
    addon.kops.k8s.io/name: eks-pod-identity-webhook.addons.k8s.io
    app.kubernetes.io/managed-by: kops
    k8s-addon: eks-pod-identity-webhook.addons.k8s.io
  name: pod-identity-webhook
  namespace: kube-system
spec:
  commonName: pod-identity-webhook.kube-system.svc
  dnsNames:
  - pod-identity-webhook
  - pod-identity-webhook.kube-system
  - pod-identity-webhook.kube-system.svc
  - pod-identity-webhook.kube-system.svc.local
  duration: 2160h
  issuerRef:
    kind: Issuer
    name: eks-pod-identity-webhook.addons.k8s.io
  renewBefore: 360h
  secretName: pod-identity-webhook-cert

---

apiVersion: admissionregistration.k8s.io/v1
kind: MutatingWebhookConfiguration
metadata:
  annotations:
    cert-manager.io/inject-ca-from: kube-system/pod-identity-webhook
  creationTimestamp: null
  labels:
    addon.kops.k8s.io/name: eks-pod-identity-webhook.addons.k8s.io
    app.kubernetes.io/managed-by: kops
    k8s-addon: eks-pod-identity-webhook.addons.k8s.io
  name: pod-identity-webhook
  namespace: kube-system
webhooks:
- admissionReviewVersions:
  - v1beta1
  clientConfig:
    service:
      name: pod-identity-webhook
      namespace: kube-system
      path: /mutate
  failurePolicy: Fail
  name: pod-identity-webhook.amazonaws.com
  objectSelector:
    matchExpressions:
    - key: kops.k8s.io/managed-by
      operator: NotIn
      values:
      - kops
    - key: k8s-app
      operator: NotIn
      values:
      - kube-apiserver
  rules:
  - apiGroups:
    - ""
    apiVersions:
    - v1
    operations:
    - CREATE
    resources:
    - pods
  sideEffects: None

---

apiVersion: v1
kind: Service
metadata:
  annotations:
    prometheus.io/port: "443"
    prometheus.io/scheme: https
    prometheus.io/scrape: "true"
  creationTimestamp: null
  labels:
    addon.kops.k8s.io/name: eks-pod-identity-webhook.addons.k8s.io
    app.kubernetes.io/managed-by: kops
    k8s-addon: eks-pod-identity-webhook.addons.k8s.io
  name: pod-identity-webhook
  namespace: kube-system
spec:
  ports:
  - port: 443
    protocol: TCP
    targetPort: 443
  selector:
    app: pod-identity-webhook

---

apiVersion: v1
data:
  config: '{"default/myserviceaccount":{"RoleARN":"arn:aws-test:iam::123456789012:role/myserviceaccount.default.sa.minimal.example.com","Audience":"amazonaws.com","UseRegionalSTS":true,"TokenExpiration":0},"myapp/myotherserviceaccount":{"RoleARN":"arn:aws-test:iam::123456789012:role/myotherserviceaccount.myapp.sa.minimal.example.com","Audience":"amazonaws.com","UseRegionalSTS":true,"TokenExpiration":0},"test-*/myserviceaccount":{"RoleARN":"arn:aws-test:iam::123456789012:role/myserviceaccount.test-wildcard.sa.minimal.example.com","Audience":"amazonaws.com","UseRegionalSTS":true,"TokenExpiration":0}}'
kind: ConfigMap
metadata:
  annotations:
    prometheus.io/port: "443"
    prometheus.io/scheme: https
    prometheus.io/scrape: "true"
  creationTimestamp: null
  labels:
    addon.kops.k8s.io/name: eks-pod-identity-webhook.addons.k8s.io
    app.kubernetes.io/managed-by: kops
    k8s-addon: eks-pod-identity-webhook.addons.k8s.io
  name: pod-identity-webhook
  namespace: kube-system

---

apiVersion: policy/v1beta1
kind: PodDisruptionBudget
metadata:
  creationTimestamp: null
  labels:
    addon.kops.k8s.io/name: eks-pod-identity-webhook.addons.k8s.io
    app.kubernetes.io/managed-by: kops
    k8s-addon: eks-pod-identity-webhook.addons.k8s.io
  name: pod-identity-webhook
  namespace: kube-system
spec:
  maxUnavailable: 50%
  selector:
    matchLabels:
      app: pod-identity-webhook

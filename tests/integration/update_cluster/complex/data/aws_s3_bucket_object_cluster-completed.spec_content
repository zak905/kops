apiVersion: kops.k8s.io/v1alpha2
kind: Cluster
metadata:
  creationTimestamp: "2016-12-10T22:42:27Z"
  name: complex.example.com
spec:
  additionalNetworkCIDRs:
  - 10.1.0.0/16
  - 10.2.0.0/16
  api:
    loadBalancer:
      accessLog:
        bucket: access-log-example
      additionalSecurityGroups:
      - sg-exampleid5
      - sg-exampleid6
      class: Network
      crossZoneLoadBalancing: true
      sslCertificate: arn:aws-test:acm:us-test-1:000000000000:certificate/123456789012-1234-1234-1234-12345678
      sslPolicy: ELBSecurityPolicy-2016-08
      subnets:
      - allocationId: eipalloc-012345a678b9cdefa
        name: us-test-1a
      type: Public
  authorization:
    alwaysAllow: {}
  channel: stable
  cloudConfig:
    awsEBSCSIDriver:
      enabled: false
    manageStorageClasses: true
  cloudLabels:
    Owner: John Doe
    foo/bar: fib+baz
  cloudProvider: aws
  clusterDNSDomain: cluster.local
  configBase: memfs://clusters.example.com/complex.example.com
  configStore: memfs://clusters.example.com/complex.example.com
  containerRuntime: containerd
  containerd:
    logLevel: info
    version: 1.4.12
  dnsZone: Z1AFAKE1ZON3YO
  docker:
    skipInstall: true
  etcdClusters:
  - backups:
      backupStore: memfs://clusters.example.com/complex.example.com/backups/etcd/main
    etcdMembers:
    - instanceGroup: master-us-test-1a
      name: a
    name: main
    version: 3.4.13
  - backups:
      backupStore: memfs://clusters.example.com/complex.example.com/backups/etcd/events
    etcdMembers:
    - instanceGroup: master-us-test-1a
      name: a
    name: events
    version: 3.4.13
  externalDns:
    provider: dns-controller
  iam:
    legacy: false
    permissionsBoundary: arn:aws-test:iam::000000000000:policy/boundaries
  keyStore: memfs://clusters.example.com/complex.example.com/pki
  kubeAPIServer:
    allowPrivileged: true
    anonymousAuth: false
    apiAudiences:
    - kubernetes.svc.default
    apiServerCount: 1
    auditWebhookBatchThrottleQps: 3140m
    authorizationMode: AlwaysAllow
    bindAddress: 0.0.0.0
    cloudProvider: aws
    cpuLimit: 500m
    cpuRequest: 200m
    enableAdmissionPlugins:
    - NamespaceLifecycle
    - LimitRanger
    - ServiceAccount
    - DefaultStorageClass
    - DefaultTolerationSeconds
    - MutatingAdmissionWebhook
    - ValidatingAdmissionWebhook
    - NodeRestriction
    - ResourceQuota
    etcdServers:
    - https://127.0.0.1:4001
    etcdServersOverrides:
    - /events#https://127.0.0.1:4002
    image: registry.k8s.io/kube-apiserver:v1.21.0
    kubeletPreferredAddressTypes:
    - InternalIP
    - Hostname
    - ExternalIP
    logLevel: 2
    memoryLimit: 1000Mi
    memoryRequest: 800Mi
    requestheaderAllowedNames:
    - aggregator
    requestheaderExtraHeaderPrefixes:
    - X-Remote-Extra-
    requestheaderGroupHeaders:
    - X-Remote-Group
    requestheaderUsernameHeaders:
    - X-Remote-User
    securePort: 443
    serviceAccountIssuer: https://api.internal.complex.example.com
    serviceAccountJWKSURI: https://api.internal.complex.example.com/openid/v1/jwks
    serviceClusterIPRange: 100.64.0.0/13
    serviceNodePortRange: 28000-32767
    storageBackend: etcd3
  kubeControllerManager:
    allocateNodeCIDRs: true
    attachDetachReconcileSyncPeriod: 1m0s
    cloudProvider: aws
    clusterCIDR: 100.96.0.0/11
    clusterName: complex.example.com
    configureCloudRoutes: false
    image: registry.k8s.io/kube-controller-manager:v1.21.0
    leaderElection:
      leaderElect: true
    logLevel: 2
    useServiceAccountCredentials: true
  kubeDNS:
    cacheMaxConcurrent: 150
    cacheMaxSize: 1000
    cpuRequest: 100m
    domain: cluster.local
    memoryLimit: 170Mi
    memoryRequest: 70Mi
    nodeLocalDNS:
      cpuRequest: 25m
      enabled: false
      image: registry.k8s.io/dns/k8s-dns-node-cache:1.21.3
      memoryRequest: 5Mi
    provider: CoreDNS
    serverIP: 100.64.0.10
  kubeProxy:
    clusterCIDR: 100.96.0.0/11
    cpuRequest: 100m
    image: registry.k8s.io/kube-proxy:v1.21.0
    logLevel: 2
  kubeScheduler:
    image: registry.k8s.io/kube-scheduler:v1.21.0
    leaderElection:
      leaderElect: true
    logLevel: 2
  kubelet:
    anonymousAuth: false
    cgroupDriver: systemd
    cgroupRoot: /
    cloudProvider: aws
    clusterDNS: 100.64.0.10
    clusterDomain: cluster.local
    enableDebuggingHandlers: true
    evictionHard: memory.available<100Mi,nodefs.available<10%,nodefs.inodesFree<5%,imagefs.available<10%,imagefs.inodesFree<5%
    kubeconfigPath: /var/lib/kubelet/kubeconfig
    logLevel: 2
    networkPluginName: cni
    podInfraContainerImage: registry.k8s.io/pause:3.6
    podManifestPath: /etc/kubernetes/manifests
    shutdownGracePeriod: 30s
    shutdownGracePeriodCriticalPods: 10s
  kubernetesApiAccess:
  - 1.1.1.0/24
  - pl-44444444
  kubernetesVersion: 1.21.0
  masterInternalName: api.internal.complex.example.com
  masterKubelet:
    anonymousAuth: false
    cgroupDriver: systemd
    cgroupRoot: /
    cloudProvider: aws
    clusterDNS: 100.64.0.10
    clusterDomain: cluster.local
    enableDebuggingHandlers: true
    evictionHard: memory.available<100Mi,nodefs.available<10%,nodefs.inodesFree<5%,imagefs.available<10%,imagefs.inodesFree<5%
    kubeconfigPath: /var/lib/kubelet/kubeconfig
    logLevel: 2
    networkPluginName: cni
    podInfraContainerImage: registry.k8s.io/pause:3.6
    podManifestPath: /etc/kubernetes/manifests
    registerSchedulable: false
    shutdownGracePeriod: 30s
    shutdownGracePeriodCriticalPods: 10s
  masterPublicName: api.complex.example.com
  networkCIDR: 172.20.0.0/16
  networking:
    cni: {}
  nodePortAccess:
  - 1.2.3.4/32
  - 10.20.30.0/24
  nonMasqueradeCIDR: 100.64.0.0/10
  podCIDR: 100.96.0.0/11
  secretStore: memfs://clusters.example.com/complex.example.com/secrets
  serviceClusterIPRange: 100.64.0.0/13
  sshAccess:
  - 1.1.1.1/32
  - pl-66666666
  sshKeyName: ""
  subnets:
  - cidr: 172.20.32.0/19
    name: us-test-1a
    type: Public
    zone: us-test-1a
  - additionalRoutes:
    - cidr: 192.168.1.10/32
      target: tgw-0123456
    cidr: 172.20.64.0/19
    egress: tgw-123456
    name: us-east-1a-private
    type: Private
    zone: us-test-1a
  - cidr: 172.20.96.0/19
    name: us-east-1a-utility
    type: Utility
    zone: us-test-1a
  target:
    terraform:
      filesProviderExtraConfig:
        profile: foo
      providerExtraConfig:
        max_retries: "10"
  topology:
    dns:
      type: Public
    masters: public
    nodes: public
